# This is a GitHub Actions workflow for building a Docker image, running tests inside it,
# and then pushing the image to Docker Hub.

name: Docker-based CI/CD Pipeline

# Trigger the workflow only when changes are pushed to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-test-and-push:
    name: Build, Test and Push Docker Image
    runs-on: ubuntu-latest  # Use the latest Ubuntu-based runner

    steps:
      # Step 1: Checkout the repository source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (optional but future-proof for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build Docker image using Dockerfile in project root
      - name: Build Docker image
        run: docker build -t jest-testing .

      # Step 4: Run tests inside the Docker container
      - name: Run tests inside Docker container
        run: docker run --rm jest-testing npm test

      # Step 5: Log in to Docker Hub using stored secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Tag the image for your Docker Hub repository
      - name: Tag image for Docker Hub
        run: docker tag jest-testing ecdigital/jest-testing:latest

      # Step 7: Push the tagged image to Docker Hub
      - name: Push image to Docker Hub
        run: docker push ecdigital/jest-testing:latest
      
      # Step 8: Clean up local Docker images (optional)
      - name: Clean up local Docker images
        run: docker rmi jest-testing ecdigital/jest-testing:latest || true
